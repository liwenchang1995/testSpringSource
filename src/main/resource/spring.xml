<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd" >
    <bean id="loginService" class="spring.service.imp.LoginService">
        <property name="loginDao" ref="loginDao">
        </property>
    </bean>

    <bean name="loginDao" class="spring.dao.imp.LoginDao">
    </bean>

    <!-- 定义切面 -->
    <bean id="logAspect" class="spring.service.imp.LogService">
    </bean>

    <!-- 开启spring注解扫描组件 -->
    <!-- base-packge指定要扫描的基类包,扫描多个包用逗号分隔-->
    <!-- resource-pattern指定要要扫描的目标类-->
    <!-- context:exclude-filter 排除指定的类-->
    <!-- context:include-filter 包含指定的类-->
    <context:component-scan base-package="spring.annotation" resource-pattern="*.class">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"></context:exclude-filter>
    </context:component-scan>

    <!-- aop相关的配置和说明 -->
    <aop:config proxy-target-class="true">
        <!-- 定义相关的切面 -->
        <aop:aspect ref="logAspect">
            <!-- 定义切入点 -->
            <aop:pointcut expression="execution(* *.*(..))" id="transactionPointCut"/>
            <aop:before pointcut-ref="transactionPointCut" method="beforeMethod"/>
            <aop:after pointcut-ref="transactionPointCut" method="afterMethod"/>
        </aop:aspect>
    </aop:config>

    <!-- 基于构造器注入-->
    <bean id="testConstructor" class="spring.test.TestConstructor">
        <constructor-arg index="0" value="1234567" type="java.lang.String"></constructor-arg>
        <constructor-arg index="1" value="true" type="boolean"></constructor-arg>
    </bean>

    <!-- 静态工厂实例化-->
    <bean id="testStatic" class="spring.test.TestStaticFactory" factory-method="testStaticFactory">

    </bean>

    <!-- 静态工厂实例化-->
    <bean id="testAlias" abstract="true" name="testAlias testAlias" >
    </bean>

    <!-- 实例工厂-->
    <bean id="testInstanceFactory" class="spring.test.TestInstanceFactory"></bean>
    <bean id="testInstance" factory-bean="testInstanceFactory" factory-method="getInstance"></bean>

    <!--测试循环依赖-->
    <bean id="circleA" class="spring.test.CircleA">
        <property name="circleB" ref="circleB"></property>
    </bean>
    <bean id="circleB" class="spring.test.CircleB">
        <property name="circleA" ref="circleA"></property>
    </bean>
</beans>